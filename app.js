// Generated by CoffeeScript 1.8.0
(function() {
  var addRow, clickBit, currentTool, emptyRow, removeRow, rows, setTool, toDecimal, updateBit;

  rows = [];

  emptyRow = function() {
    var i, _i, _results;
    _results = [];
    for (i = _i = 0; _i <= 31; i = ++_i) {
      _results.push({
        color: 'red',
        value: 0
      });
    }
    return _results;
  };

  toDecimal = function(n) {
    var i, j, octets, sum, value;
    octets = (function() {
      var _i, _j, _len, _ref, _ref1, _results;
      _ref = [0, 8, 16, 24];
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        sum = 0;
        value = 1;
        for (j = _j = _ref1 = i + 7; _ref1 <= i ? _j <= i : _j >= i; j = _ref1 <= i ? ++_j : --_j) {
          sum += rows[n][j].value * value;
          value *= 2;
        }
        _results.push(sum);
      }
      return _results;
    })();
    return octets.join('.');
  };

  addRow = function() {
    var bit, htmlButtons, htmlContent, htmlRow, i, n, newRow, x, _i, _len, _ref;
    n = rows.length;
    newRow = (function() {
      var _i, _len, _ref, _results;
      if (rows.length === 0) {
        return emptyRow();
      } else {
        _ref = rows[rows.length - 1];
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          x = _ref[_i];
          _results.push(jQuery.extend({}, x));
        }
        return _results;
      }
    })();
    rows.push(newRow);
    htmlButtons = (function() {
      var _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = newRow.length; _i < _len; i = ++_i) {
        bit = newRow[i];
        _results.push("<td><button id=\"r" + n + "b" + i + "\" onclick=\"clickBit(" + n + ", " + i + ");\" class=\"" + bit.color + "\">" + bit.value + "</button></td>");
      }
      return _results;
    })();
    _ref = [8, 16, 24];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      i = _ref[_i];
      htmlButtons[i - 1] += '<td>&mdash;</td>';
    }
    htmlContent = htmlButtons.join('');
    htmlContent += "<td>&nbsp;</td>";
    htmlContent += "<td id=\"r" + n + "dec\">" + (toDecimal(n)) + "</td>";
    htmlRow = '<tr>' + htmlContent + '</tr>';
    return $('#bit-table').append(htmlRow);
  };

  removeRow = function() {
    if (rows.length <= 0) {
      return;
    }
    rows.pop();
    return $('#bit-table tr').last().remove();
  };

  updateBit = function(n, i) {
    var button;
    button = $("\#r" + n + "b" + i);
    button.html(rows[n][i].value);
    $("\#r" + n + "dec").html(toDecimal(n));
    button.removeClass();
    return button.addClass(rows[n][i].color);
  };

  currentTool = 'flip';

  setTool = function(tool) {
    return currentTool = tool;
  };

  clickBit = function(n, i) {
    switch (currentTool) {
      case 'flip':
        rows[n][i].value ^= 1;
        break;
      default:
        rows[n][i].color = currentTool;
    }
    return updateBit(n, i);
  };

  $(document).ready(function() {
    return addRow();
  });

  window.addRow = addRow;

  window.removeRow = removeRow;

  window.clickBit = clickBit;

  window.setTool = setTool;

}).call(this);
